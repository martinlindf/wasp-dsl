/*
 * generated by Xtext 2.10.0
 */
grammar InternalTurtleBotMissionDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package se.chalmers.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package se.chalmers.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import se.chalmers.services.TurtleBotMissionDSLGrammarAccess;

}

@parser::members {

 	private TurtleBotMissionDSLGrammarAccess grammarAccess;

    public InternalTurtleBotMissionDSLParser(TokenStream input, TurtleBotMissionDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "TurtleBot";
   	}

   	@Override
   	protected TurtleBotMissionDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleTurtleBot
entryRuleTurtleBot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTurtleBotRule()); }
	iv_ruleTurtleBot=ruleTurtleBot
	{ $current=$iv_ruleTurtleBot.current; }
	EOF;

// Rule TurtleBot
ruleTurtleBot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='TurtleBot'
		{
			newLeafNode(otherlv_0, grammarAccess.getTurtleBotAccess().getTurtleBotKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTurtleBotAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTurtleBotRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"se.chalmers.TurtleBotMissionDSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTurtleBotAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='bot_start'
		{
			newLeafNode(otherlv_3, grammarAccess.getTurtleBotAccess().getBot_startKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTurtleBotRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTurtleBotAccess().getBot_startWayPointCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='area'
		{
			newLeafNode(otherlv_5, grammarAccess.getTurtleBotAccess().getAreaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTurtleBotAccess().getAreaAreaParserRuleCall_6_0());
				}
				lv_area_6_0=ruleArea
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTurtleBotRule());
					}
					set(
						$current,
						"area",
						lv_area_6_0,
						"se.chalmers.TurtleBotMissionDSL.Area");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='waypointtypes'
		{
			newLeafNode(otherlv_7, grammarAccess.getTurtleBotAccess().getWaypointtypesKeyword_7());
		}
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getTurtleBotAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTurtleBotAccess().getWaypointtypesWaypointTypeParserRuleCall_9_0());
				}
				lv_waypointtypes_9_0=ruleWaypointType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTurtleBotRule());
					}
					add(
						$current,
						"waypointtypes",
						lv_waypointtypes_9_0,
						"se.chalmers.TurtleBotMissionDSL.WaypointType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10=','
			{
				newLeafNode(otherlv_10, grammarAccess.getTurtleBotAccess().getCommaKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTurtleBotAccess().getWaypointtypesWaypointTypeParserRuleCall_10_1_0());
					}
					lv_waypointtypes_11_0=ruleWaypointType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTurtleBotRule());
						}
						add(
							$current,
							"waypointtypes",
							lv_waypointtypes_11_0,
							"se.chalmers.TurtleBotMissionDSL.WaypointType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getTurtleBotAccess().getRightCurlyBracketKeyword_11());
		}
		otherlv_13='waypoints'
		{
			newLeafNode(otherlv_13, grammarAccess.getTurtleBotAccess().getWaypointsKeyword_12());
		}
		otherlv_14='{'
		{
			newLeafNode(otherlv_14, grammarAccess.getTurtleBotAccess().getLeftCurlyBracketKeyword_13());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTurtleBotAccess().getWaypointsWayPointParserRuleCall_14_0());
				}
				lv_waypoints_15_0=ruleWayPoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTurtleBotRule());
					}
					add(
						$current,
						"waypoints",
						lv_waypoints_15_0,
						"se.chalmers.TurtleBotMissionDSL.WayPoint");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_16=','
			{
				newLeafNode(otherlv_16, grammarAccess.getTurtleBotAccess().getCommaKeyword_15_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTurtleBotAccess().getWaypointsWayPointParserRuleCall_15_1_0());
					}
					lv_waypoints_17_0=ruleWayPoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTurtleBotRule());
						}
						add(
							$current,
							"waypoints",
							lv_waypoints_17_0,
							"se.chalmers.TurtleBotMissionDSL.WayPoint");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getTurtleBotAccess().getRightCurlyBracketKeyword_16());
		}
		(
			otherlv_19='missions'
			{
				newLeafNode(otherlv_19, grammarAccess.getTurtleBotAccess().getMissionsKeyword_17_0());
			}
			otherlv_20='{'
			{
				newLeafNode(otherlv_20, grammarAccess.getTurtleBotAccess().getLeftCurlyBracketKeyword_17_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTurtleBotAccess().getMissionsMissionParserRuleCall_17_2_0());
					}
					lv_missions_21_0=ruleMission
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTurtleBotRule());
						}
						add(
							$current,
							"missions",
							lv_missions_21_0,
							"se.chalmers.TurtleBotMissionDSL.Mission");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_22=','
				{
					newLeafNode(otherlv_22, grammarAccess.getTurtleBotAccess().getCommaKeyword_17_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTurtleBotAccess().getMissionsMissionParserRuleCall_17_3_1_0());
						}
						lv_missions_23_0=ruleMission
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTurtleBotRule());
							}
							add(
								$current,
								"missions",
								lv_missions_23_0,
								"se.chalmers.TurtleBotMissionDSL.Mission");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_24='}'
			{
				newLeafNode(otherlv_24, grammarAccess.getTurtleBotAccess().getRightCurlyBracketKeyword_17_4());
			}
		)?
		otherlv_25='}'
		{
			newLeafNode(otherlv_25, grammarAccess.getTurtleBotAccess().getRightCurlyBracketKeyword_18());
		}
	)
;

// Entry rule entryRuleTask
entryRuleTask returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTaskRule()); }
	iv_ruleTask=ruleTask
	{ $current=$iv_ruleTask.current; }
	EOF;

// Rule Task
ruleTask returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTaskAccess().getLineTaskParserRuleCall_0());
		}
		this_LineTask_0=ruleLineTask
		{
			$current = $this_LineTask_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTaskAccess().getShortestPathTaskParserRuleCall_1());
		}
		this_ShortestPathTask_1=ruleShortestPathTask
		{
			$current = $this_ShortestPathTask_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTaskAccess().getReturnToStartTaskParserRuleCall_2());
		}
		this_ReturnToStartTask_2=ruleReturnToStartTask
		{
			$current = $this_ReturnToStartTask_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleArea
entryRuleArea returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAreaRule()); }
	iv_ruleArea=ruleArea
	{ $current=$iv_ruleArea.current; }
	EOF;

// Rule Area
ruleArea returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAreaAccess().getAreaAction_0(),
					$current);
			}
		)
		otherlv_1='Area'
		{
			newLeafNode(otherlv_1, grammarAccess.getAreaAccess().getAreaKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAreaAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='xmax'
			{
				newLeafNode(otherlv_3, grammarAccess.getAreaAccess().getXmaxKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAreaAccess().getXmaxEIntParserRuleCall_3_1_0());
					}
					lv_xmax_4_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAreaRule());
						}
						set(
							$current,
							"xmax",
							lv_xmax_4_0,
							"se.chalmers.TurtleBotMissionDSL.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='ymax'
			{
				newLeafNode(otherlv_5, grammarAccess.getAreaAccess().getYmaxKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAreaAccess().getYmaxEIntParserRuleCall_4_1_0());
					}
					lv_ymax_6_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAreaRule());
						}
						set(
							$current,
							"ymax",
							lv_ymax_6_0,
							"se.chalmers.TurtleBotMissionDSL.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getAreaAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleWaypointType
entryRuleWaypointType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWaypointTypeRule()); }
	iv_ruleWaypointType=ruleWaypointType
	{ $current=$iv_ruleWaypointType.current; }
	EOF;

// Rule WaypointType
ruleWaypointType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getWaypointTypeAccess().getWaypointTypeAction_0(),
					$current);
			}
		)
		otherlv_1='WaypointType'
		{
			newLeafNode(otherlv_1, grammarAccess.getWaypointTypeAccess().getWaypointTypeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWaypointTypeAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWaypointTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"se.chalmers.TurtleBotMissionDSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWayPoint
entryRuleWayPoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWayPointRule()); }
	iv_ruleWayPoint=ruleWayPoint
	{ $current=$iv_ruleWayPoint.current; }
	EOF;

// Rule WayPoint
ruleWayPoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='WayPoint'
		{
			newLeafNode(otherlv_0, grammarAccess.getWayPointAccess().getWayPointKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWayPointAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWayPointRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"se.chalmers.TurtleBotMissionDSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getWayPointAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='coord_x'
			{
				newLeafNode(otherlv_3, grammarAccess.getWayPointAccess().getCoord_xKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWayPointAccess().getCoord_xEIntParserRuleCall_3_1_0());
					}
					lv_coord_x_4_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWayPointRule());
						}
						set(
							$current,
							"coord_x",
							lv_coord_x_4_0,
							"se.chalmers.TurtleBotMissionDSL.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='coord_y'
			{
				newLeafNode(otherlv_5, grammarAccess.getWayPointAccess().getCoord_yKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWayPointAccess().getCoord_yEIntParserRuleCall_4_1_0());
					}
					lv_coord_y_6_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWayPointRule());
						}
						set(
							$current,
							"coord_y",
							lv_coord_y_6_0,
							"se.chalmers.TurtleBotMissionDSL.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='waypointtypes'
		{
			newLeafNode(otherlv_7, grammarAccess.getWayPointAccess().getWaypointtypesKeyword_5());
		}
		otherlv_8='('
		{
			newLeafNode(otherlv_8, grammarAccess.getWayPointAccess().getLeftParenthesisKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWayPointRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getWayPointAccess().getWaypointtypesWaypointTypeCrossReference_7_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10=','
			{
				newLeafNode(otherlv_10, grammarAccess.getWayPointAccess().getCommaKeyword_8_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWayPointRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getWayPointAccess().getWaypointtypesWaypointTypeCrossReference_8_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_12=')'
		{
			newLeafNode(otherlv_12, grammarAccess.getWayPointAccess().getRightParenthesisKeyword_9());
		}
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getWayPointAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleMission
entryRuleMission returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMissionRule()); }
	iv_ruleMission=ruleMission
	{ $current=$iv_ruleMission.current; }
	EOF;

// Rule Mission
ruleMission returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Mission'
		{
			newLeafNode(otherlv_0, grammarAccess.getMissionAccess().getMissionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMissionAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMissionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"se.chalmers.TurtleBotMissionDSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMissionAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='task'
		{
			newLeafNode(otherlv_3, grammarAccess.getMissionAccess().getTaskKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getMissionAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMissionAccess().getTaskTaskParserRuleCall_5_0());
				}
				lv_task_5_0=ruleTask
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMissionRule());
					}
					add(
						$current,
						"task",
						lv_task_5_0,
						"se.chalmers.TurtleBotMissionDSL.Task");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getMissionAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMissionAccess().getTaskTaskParserRuleCall_6_1_0());
					}
					lv_task_7_0=ruleTask
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMissionRule());
						}
						add(
							$current,
							"task",
							lv_task_7_0,
							"se.chalmers.TurtleBotMissionDSL.Task");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getMissionAccess().getRightCurlyBracketKeyword_7());
		}
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getMissionAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleLineTask
entryRuleLineTask returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLineTaskRule()); }
	iv_ruleLineTask=ruleLineTask
	{ $current=$iv_ruleLineTask.current; }
	EOF;

// Rule LineTask
ruleLineTask returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LineTask'
		{
			newLeafNode(otherlv_0, grammarAccess.getLineTaskAccess().getLineTaskKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLineTaskAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='waypoints'
		{
			newLeafNode(otherlv_2, grammarAccess.getLineTaskAccess().getWaypointsKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getLineTaskAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLineTaskRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getLineTaskAccess().getWaypointsWayPointCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getLineTaskAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLineTaskRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getLineTaskAccess().getWaypointsWayPointCrossReference_5_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getLineTaskAccess().getRightParenthesisKeyword_6());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getLineTaskAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleShortestPathTask
entryRuleShortestPathTask returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShortestPathTaskRule()); }
	iv_ruleShortestPathTask=ruleShortestPathTask
	{ $current=$iv_ruleShortestPathTask.current; }
	EOF;

// Rule ShortestPathTask
ruleShortestPathTask returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ShortestPathTask'
		{
			newLeafNode(otherlv_0, grammarAccess.getShortestPathTaskAccess().getShortestPathTaskKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getShortestPathTaskAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='waypoints'
		{
			newLeafNode(otherlv_2, grammarAccess.getShortestPathTaskAccess().getWaypointsKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getShortestPathTaskAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getShortestPathTaskRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getShortestPathTaskAccess().getWaypointsWayPointCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getShortestPathTaskAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getShortestPathTaskRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getShortestPathTaskAccess().getWaypointsWayPointCrossReference_5_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getShortestPathTaskAccess().getRightParenthesisKeyword_6());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getShortestPathTaskAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleReturnToStartTask
entryRuleReturnToStartTask returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnToStartTaskRule()); }
	iv_ruleReturnToStartTask=ruleReturnToStartTask
	{ $current=$iv_ruleReturnToStartTask.current; }
	EOF;

// Rule ReturnToStartTask
ruleReturnToStartTask returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getReturnToStartTaskAccess().getReturnToStartTaskAction_0(),
					$current);
			}
		)
		otherlv_1='ReturnToStartTask'
		{
			newLeafNode(otherlv_1, grammarAccess.getReturnToStartTaskAccess().getReturnToStartTaskKeyword_1());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
